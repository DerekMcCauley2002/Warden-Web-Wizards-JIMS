# Generated by Django 4.1.7 on 2023-04-24 01:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import localflavor.us.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('position', models.CharField(choices=[('officer', 'officer'), ('booking_clerk', 'booking_clerk'), ('supervisor', 'supervisor'), ('release_clerk', 'release_clerk')], max_length=25)),
                ('user_status', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('account_number', models.IntegerField(primary_key=True, serialize=False)),
                ('balance', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='InmateTraits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=80)),
                ('middle_initial', models.CharField(blank=True, max_length=1, null=True)),
                ('last_name', models.CharField(max_length=80)),
                ('date_of_birth', models.DateField()),
                ('place_of_birth', django_countries.fields.CountryField(max_length=2)),
                ('sex', models.CharField(choices=[('W', 'Woman'), ('M', 'Man'), ('T', 'Transgender'), ('N', 'Non-binary/non-conforming'), ('P', 'Prefer not to respond')], max_length=1)),
                ('hair_color', models.CharField(choices=[('black', 'Black'), ('brown', 'Brown'), ('blonde', 'Blonde'), ('red', 'Red'), ('gray', 'Gray'), ('white', 'White'), ('other', 'Other')], max_length=20)),
                ('eye_color', models.CharField(choices=[('black', 'Black'), ('brown', 'Brown'), ('blue', 'Blue'), ('green', 'Green'), ('gray', 'Gray'), ('hazel', 'Hazel'), ('other', 'Other')], max_length=20)),
                ('height_feet', models.PositiveIntegerField(choices=[(2, '2 ft'), (3, '3 ft'), (4, '4 ft'), (5, '5 ft'), (6, '6 ft'), (7, '7 ft')])),
                ('height_inches', models.PositiveIntegerField(choices=[(0, '0 in'), (1, '1 in'), (2, '2 in'), (3, '3 in'), (4, '4 in'), (5, '5 in'), (6, '6 in'), (7, '7 in'), (8, '8 in'), (9, '9 in'), (10, '10 in'), (11, '11 in')])),
                ('weight', models.PositiveIntegerField()),
                ('alias', models.CharField(blank=True, max_length=80, null=True)),
                ('blemishes', models.CharField(blank=True, max_length=200, null=True)),
                ('primary_add', models.CharField(max_length=200)),
                ('temp_add', models.CharField(blank=True, max_length=200, null=True)),
                ('drivers_license_num', models.CharField(max_length=8, unique=True)),
                ('drivers_license_state', localflavor.us.models.USStateField(max_length=2)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='InmateVehicles',
            fields=[
                ('license_plate_number', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('license_plate_state', models.CharField(max_length=2)),
                ('make', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('place_parked', models.CharField(max_length=100)),
                ('impound_company', models.CharField(max_length=100)),
                ('impound_location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BookingClerk',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('booking_clerk_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('officer_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseClerk',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('release_clerk_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('supervisor_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetails',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(max_length=2)),
                ('transaction_amount', models.FloatField()),
                ('transaction_date', models.DateTimeField()),
                ('account_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jims_app.accounts')),
            ],
        ),
        migrations.CreateModel(
            name='InmateSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='jims_app.accounts')),
                ('arrest_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jims_app.inmatearrestinfo')),
                ('emergency_contact', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.emergencycontacts')),
                ('gang_name', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.inmategangs')),
                ('health_sheet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jims_app.inmatehealthsheet')),
                ('license_plate_number', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.inmatevehicles')),
                ('property', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.inmateproperty')),
                ('traits', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jims_app.inmatetraits')),
            ],
        ),
    ]
